version: "3.9"
services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app_pw
      POSTGRES_DB: appdb
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d appdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data

  minio:
    image: minio/minio:RELEASE.2025-02-18T00-00-00Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadminpw
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - miniodata:/data

  minio-init:
    image: minio/mc:RELEASE.2025-02-18T00-00-00Z
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 minioadmin minioadminpw &&
      mc mb -p local/videos || true &&
      mc mb -p local/exports || true &&
      mc anonymous set none local/videos &&
      mc anonymous set none local/exports &&
      echo 'MinIO buckets ready';
      "
  
  api:
    build:
      context: ../api
      dockerfile: Dockerfile
    env_file: ../.env
    depends_on:
      - postgres
      - minio
      - redis
    ports:
      - "8000:8000"

  worker:
    build:
      context: ../worker
      dockerfile: Dockerfile
    env_file: ../.env
    depends_on:
      - redis
      - minio
      - postgres
    command: ["bash", "-lc", "rq worker -u redis://redis:6379 autoedit"]

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    environment:
      VITE_API_BASE: http://localhost:8000
    ports:
      - "5173:5173"
    depends_on:
      - api
    # prod 可改用 nginx/serve 提供靜態檔

volumes:
  pgdata:
  redisdata:
  miniodata:
