services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app_pw
      POSTGRES_DB: appdb
    volumes: [pgdata:/var/lib/postgresql/data]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d appdb || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7
    command: ["redis-server", "--appendonly", "yes"]
    volumes: [redisdata:/data]
    restart: unless-stopped

  minio:
    image: minio/minio:RELEASE.2025-09-07T16-13-09Z-cpuv1
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
      MINIO_API_CORS_ALLOW_ORIGIN: "https://fiveclip.fcuai.tw,http://localhost:5173"

    #ports:
    #  - "9000:9000"
    #  - "9001:9001"
    volumes: [miniodata:/data]
    restart: unless-stopped

  api:
    build:
      context: ../api
      dockerfile: Dockerfile
    env_file: ./.env
    depends_on: [postgres, minio, redis]
    #ports: ["8000:8000"]
    restart: unless-stopped

  frontend:
    build:
      context: ../frontend
      #dockerfile: Dockerfile
      dockerfile: Dockerfile.prod
      args:
        VITE_API_BASE:  ${BACKEND_BASE}
        VITE_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
    #ports: ["5173:5173"]
    #depends_on: [api]
    restart: unless-stopped

  worker:
    profiles: ["worker"]
    build:
      context: ../worker
      dockerfile: Dockerfile
    env_file: ./.env
    depends_on: [redis, minio]
    restart: unless-stopped
    volumes:
      - ../models:/models:ro

  nginx:
    image: nginx:1.25-alpine
    depends_on:
      - api
      - frontend
      - minio
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro  #憑證
    restart: unless-stopped

volumes:
  pgdata:
  redisdata:
  miniodata:
